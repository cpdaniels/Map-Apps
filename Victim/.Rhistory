state = "CA",
geometry = F)
View(CA_Pop)
?get_acs
CA_Pop <- get_acs(geography = "county",
variables = "B01001_001", 'B01001A_001'
state = "CA",
geometry = F,
output = 'wide')
CA_Pop <- get_acs(geography = "county",
variables = c("B01001_001", 'B01001A_001'),
state = "CA",
geometry = F,
output = 'wide')
View(CA_Pop)
CA_Pop <- get_acs(geography = "county",
variables = c("B01001_001", 'B01001A_001', 'B01001B_001','B01001I_001', 'B06011_001'),
state = "CA",
geometry = F,
output = 'wide')
View(CA_Pop)
CA_Pop <- get_acs(geography = "county", year = 2016,
variables = c("B01001_001", 'B01001A_001', 'B01001B_001','B01001I_001', 'B06011_001'),
state = "CA",
geometry = F,
output = 'wide')
CA_Pop$PercentWhite <- CA_Pop$B01001A_001E/CA_Pop$B01001_001E
CA_Pop$MedianIncome <- CA_Pop$B06011_001M
CA_Pop <- get_acs(geography = "county", year = 2016,
variables = c("B01001_001", 'B01001A_001', 'B06011_001'),
state = "CA",
geometry = F,
output = 'wide')
CA_Pop$PercentWhite <- CA_Pop$B01001A_001E/CA_Pop$B01001_001E
CA_Pop$MedianIncome <- CA_Pop$B06011_001M
View(CA_Pop)
CA_Pop <- get_acs(geography = "county", year = 2016,
variables = c("B01001_001", 'B01001A_001', 'B06011_001'),
state = "CA",
geometry = F,
output = 'wide')
CA_Pop$PercentWhite <- CA_Pop$B01001A_001E/CA_Pop$B01001_001E
CA_Pop$MedianIncome <- CA_Pop$B06011_001M
View(CA_Pop)
CA_Pop$MedianIncome <- CA_Pop$B06011_001E
##########load data
setwd("~/Dropbox/SCHOOL/CONTEMPT")
contempts <- read.csv('CA MAP/CA Civil Contempt.csv')
CA_Pop <- get_acs(geography = "county", year = 2016,
variables = c("B01001_001", 'B01001A_001', 'B06011_001'),
state = "CA",
geometry = F,
output = 'wide')
CA_Pop$PercentWhite <- CA_Pop$B01001A_001E/CA_Pop$B01001_001E
CA_Pop$MedianIncome <- CA_Pop$B06011_001E
#make merge column
contempts$NAME <- paste(contempts$County, ' County, California', sep = "")
#merge
CA_Full <- full_join(contempts, CA_Pop)
#calculate rates
CA_Full$RatePer1000 <- round(CA_Full$Orders/(CA_Full$estimate / 1000),3)
CA_Full$PerOrders <- round(CA_Full$Contempts/CA_Full$Orders,3)
CA_Full$ConRatePer1000 <- round(CA_Full$Contempts/(CA_Full$estimate / 1000),3)
#calculate rates
CA_Full$RatePer1000 <- round(CA_Full$Orders/(CA_Full$B01001_001E / 1000),3)
CA_Full$PerOrders <- round(CA_Full$Contempts/CA_Full$Orders,3)
CA_Full$ConRatePer1000 <- round(CA_Full$Contempts/(CA_Full$B01001_001E / 1000),3)
newthing <- CA_Full[,c('County','Orders', 'Contempts', 'ConRatePer1000','RatePer1000','PercentWhite', 'MedianIncome')
]
View(newthing)
newthing <- CA_Full[,c('County','Orders', 'Contempts','PerOrders', 'ConRatePer1000','RatePer1000','PercentWhite', 'MedianIncome')
]
newthing <- newthing[order(newthing$ConRatePer1000, decreasing = T),]
newthing <- as.data.frame(rbind(newthing,c(NA,colMeans(newthing[,c(2:7)]))))
newthing[59, 'County'] <- "Mean"
View(newthing)
newthing <- newthing[order(newthing$ConRatePer1000, decreasing = T),]
newthing <- as.data.frame(rbind(newthing,c(NA,colMeans(newthing[,c(2:8)]))))
newthing[59, 'County'] <- "Mean"
newthing <- CA_Full[,c('County','Orders', 'Contempts','PerOrders',
'ConRatePer1000','RatePer1000','PercentWhite', 'MedianIncome')]
newthing <- newthing[order(newthing$ConRatePer1000, decreasing = T),]
newthing <- as.data.frame(rbind(newthing,c(NA,colMeans(newthing[,c(2:8)]))))
newthing[59, 'County'] <- "Mean"
library(knitr)
kable(newthing)
library(xtable)
library(xtable)
xtable(newthing)
table <- xtable(newthing)
table <- xtable(newthing)
digits(table) <- 2
table
View(table)
digits(table) <- 1:(ncol(table))
digits(table) <- c(0,0,2,2,2,2,0)
digits(table) <- c(0,0,0,2,2,2,2,0)
digits(table) <- c(0,0,0,0,2,2,2,2,0)
table
print(table, include.rownames = FALSE)
table <- table[c()]
table <- table[c(1:10, 59),]
digits(table) <- 2
digits(table) <- c(0,0,0,0,2,2,2,2,0)
print(table, include.rownames = FALSE)
table <- xtable(newthing)
table <- table[c(1:10, 59),]
digits(table) <- 2
digits(table) <- c(0,0,0,0,2,2,2,2,0)
print(table, include.rownames = FALSE)
table <- table[c(1:20, 59),]
digits(table) <- 2
digits(table) <- c(0,0,0,0,2,2,2,2,0)
print(table, include.rownames = FALSE)
table <- xtable(newthing)
table <- table[c(1:20, 59),]
digits(table) <- 2
digits(table) <- c(0,0,0,0,2,2,2,2,0)
print(table, include.rownames = FALSE)
table <- xtable(newthing)
table <- table[c(59, 1:20),]
digits(table) <- 2
digits(table) <- c(0,0,0,0,2,2,2,2,0)
print(table, include.rownames = FALSE)
CA_Pop <- get_acs(geography = "county", year = 2016,
variables = c("B01001_001", 'B01001A_001', 'B19013_001'),
state = "CA",
geometry = F,
output = 'wide')
View(CA_Pop)
CA_Pop$PercentWhite <- CA_Pop$B01001A_001E/CA_Pop$B01001_001E
CA_Pop$MedianIncome <- CA_Pop$B19013_001E
#make merge column
contempts$NAME <- paste(contempts$County, ' County, California', sep = "")
#merge
CA_Full <- full_join(contempts, CA_Pop)
#calculate rates
CA_Full$RatePer1000 <- round(CA_Full$Orders/(CA_Full$B01001_001E / 1000),3)
CA_Full$PerOrders <- round(CA_Full$Contempts/CA_Full$Orders,3)
CA_Full$ConRatePer1000 <- round(CA_Full$Contempts/(CA_Full$B01001_001E / 1000),3)
newthing <- CA_Full[,c('County','Orders', 'Contempts','PerOrders',
'ConRatePer1000','RatePer1000','PercentWhite', 'MedianIncome')]
newthing <- newthing[order(newthing$ConRatePer1000, decreasing = T),]
newthing <- as.data.frame(rbind(newthing,c(NA,colMeans(newthing[,c(2:8)]))))
newthing[59, 'County'] <- "Mean"
table <- xtable(newthing)
table <- table[c(59, 1:20),]
digits(table) <- 2
digits(table) <- c(0,0,0,0,2,2,2,2,0)
print(table, include.rownames = FALSE)
shiny::runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Victim Map')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Victim Map')
victim <- read.csv("Data/9.1.17-9.7.17/Formatted_Victim.csv")
setwd("~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj")
victim <- read.csv("Data/9.1.17-9.7.17/Formatted_Victim.csv")
for (d in dates){
toadd <- read.csv(paste('Data/', d, '/Formatted_Victim.csv', sep =""))
victim <- rbind(victim, toadd)
}
for (d in Dates){
toadd <- read.csv(paste('Data/', d, '/Formatted_Victim.csv', sep =""))
victim <- rbind(victim, toadd)
}
#Assigning dates
Dates <- c('9.8.17-9.14.17',
'9.15.17-9.21.17',
'9.22.17-9.28.17',
'9.29.17-10.5.17',
'10.6.17-10.12.17',
'10.13.17-10.19.17',
'10.20.17-10.26.17',
'10.27.17-11.2.17',
'11.3.17-11.9.17',
'11.10.17-11.16.17',
'11.17.17-11.23.17')
victim <- read.csv("Data/9.1.17-9.7.17/Formatted_Victim.csv")
for (d in Dates){
toadd <- read.csv(paste('Data/', d, '/Formatted_Victim.csv', sep =""))
victim <- rbind(victim, toadd)
}
View(victim)
write.csv(victim, 'Data/Victim3mo.csv')
three11 <- read.csv("Data/9.1.17-9.7.17/Formatted_311.csv")
for (d in Dates){
toadd <- read.csv(paste('Data/', d, '/Formatted_311.csv', sep =""))
three11 <- rbind(three11, toadd)
}
View(three11)
write.csv(three11, 'Data/311_3mo.csv')
nine11 <- read.csv("Data/9.1.17-9.7.17/Formatted_911.csv")
write.csv(three11, 'Data/311_3mo.csv')
nine11 <- read.csv("Data/9.1.17-9.7.17/Formatted_911.csv")
for (d in Dates){
toadd <- read.csv(paste('Data/', d, '/Formatted_911.csv', sep =""))
nine11 <- rbind(nine11, toadd)
}
write.csv(nine11, 'Data/911_3mo.csv')
dir <- 'Data/'
df = read.csv(paste(dir, "Victim3mo.csv", sep = ""), stringsAsFactors = F)
df$Date <- ymd(df$Date)
df$Time <- hms(df$Time)
saveRDS(df, "./sample_data.rds")
balt_geo <- get_acs(geography = "tract",
variables = "B01001_001",
state = "MD",
county = 'Baltimore City',
geometry = TRUE)
balt_geo$Tract <- substring(balt_geo$GEOID, 6, 12)
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
setwd("~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim")
saveRDS(df, "./sample_data.rds")
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
View(df)
View(balt_geo)
if (input$ratetype == 'Raw'){
m <- leaflet(data = balt_wgs) %>%
addTiles() %>%
addPolygons(data=balt_wgs,
stroke = FALSE,
fillOpacity = .8,
fillColor = ~colorNumeric("BuPu", balt_wgs[,input$variable][[1]])(balt_wgs[,input$variable][[1]]),
group = balt_wgs$input$variable)
} else{
m <- leaflet(data = balt_wgs) %>%
addTiles() %>%
addPolygons(data=balt_wgs,
stroke = FALSE,
fillOpacity = .8,
fillColor = ~colorNumeric("BuPu", balt_wgs[,'Rate'][[1]])(balt_wgs[,'Rate'][[1]]),
group = balt_wgs$Rate)
}
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
balt_geo$Rate <- NA
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
balt_geo$estimate[1]
balt_wgs <- balt_geo %>% st_set_crs(4326)
balt_geo$estimate[1]
balt_wgs$estimate[1]
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
View(balt_wgs)
balt_wgs$Rate <- balt_wgs$Tract/balt_wgs$estimate
balt_wgs <- balt_geo %>% st_set_crs(4326)
balt_wgs$Rate <- balt_wgs$Tract/balt_wgs$estimate
balt_geo <- get_acs(geography = "tract",
variables = "B01001_001",
state = "MD",
county = 'Baltimore City',
geometry = TRUE)
balt_geo$Tract <- substring(balt_geo$GEOID, 6, 12)
balt_wgs <- balt_geo %>% st_set_crs(4326)
balt_wgs$Rate <- balt_wgs$Tract/balt_wgs$estimate
balt_wgs$Rate <- balt_wgs$moe/balt_wgs$estimate
#Read in data
#set your data directory
data_dir <- '"~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Data/'
df = read.csv(paste(dir, "Victim3mo.csv", sep = ""), stringsAsFactors = F)
df$Date <- ymd(df$Date)
df$Time <- hms(df$Time)
saveRDS(df, "./sample_data.rds")
balt_geo <- get_acs(geography = "tract",
variables = "B01001_001",
state = "MD",
county = 'Baltimore City',
geometry = TRUE)
balt_geo$Tract <- substring(balt_geo$GEOID, 6, 12)
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
a <- subset(df, df$Date >= ymd(input$daterange[1]) &
df$Date <= ymd(input$daterange[2]))
a$Tract <-formatC(a$MergeID, width=7, flag="0")
a$Tract <- substring(a$Tract,1,6)
b <- as.data.frame(matrix(0, nrow = length(unique(a$Tract)), ncol = 2))
names(b) <- c('Tract' , input$variable)
b$Tract <- unique(a$Tract)
for (i in 1:nrow(b)){
b[i,input$variable] <- sum(a[,input$variable][which(a[,'Tract'] == b[i,'Tract'])])
}
b$Rate <- 0
balt_data <- full_join(balt_geo, b)
a <- subset(df, df$Date >= ymd('2017/9/7') &
df$Date <= ymd('2017/9/10'))
a$Tract <-formatC(a$MergeID, width=7, flag="0")
a$Tract <- substring(a$Tract,1,6)
b <- as.data.frame(matrix(0, nrow = length(unique(a$Tract)), ncol = 2))
names(b) <- c('Tract' , input$variable)
b$Tract <- unique(a$Tract)
View(b)
View(a)
for (i in 1:nrow(b)){
b[i,'PROPERTY'] <- sum(a[,'PROPERTY'][which(a[,'Tract'] == b[i,'Tract'])])
}
b$Rate <- 0
balt_data <- full_join(balt_geo, b)
View(balt_data)
b$Rate <- 0
balt_data$Rate <- balt_data[,'PROPERTY'] / (balt_data$estimate *1000)
balt_data$Rate <- balt_data[,'PROPERTY'] / (balt_data$estimate *1000)
balt_data[,'Rate'] <- balt_data[,'PROPERTY'] / (balt_data$estimate *1000)
balt_data[,'Rate'][[1]] <- balt_data[,'PROPERTY'][[1]] / (balt_data$estimate[[1]] *1000)
View(balt_data)
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
is.na(balt_wgs$Rate[[1]])
View(balt_wgs)
sum(is.na(balt_wgs$Rate))[[1]]
sum(is.na(balt_wgs$Rate))[1]
sum(is.na(balt_wgs$Rate))
#Read in data
#set your data directory
data_dir <- '"~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Data/'
df = read.csv(paste(dir, "Victim3mo.csv", sep = ""), stringsAsFactors = F)
df$Date <- ymd(df$Date)
df$Time <- hms(df$Time)
saveRDS(df, "./sample_data.rds")
balt_geo <- get_acs(geography = "tract",
variables = "B01001_001",
state = "MD",
county = 'Baltimore City',
geometry = TRUE)
balt_geo$Tract <- substring(balt_geo$GEOID, 6, 12)
df = readRDS("sample_data.rds")
data_dir <- '"~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Data/'
df = read.csv(paste(dir, "Victim3mo.csv", sep = ""), stringsAsFactors = F)
data_dir <- '~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Data/'
df = read.csv(paste(dir, "Victim3mo.csv", sep = ""), stringsAsFactors = F)
df$Date <- ymd(df$Date)
df$Time <- hms(df$Time)
saveRDS(df, "./sample_data.rds")
balt_geo <- get_acs(geography = "tract",
variables = "B01001_001",
state = "MD",
county = 'Baltimore City',
geometry = TRUE)
balt_geo$Tract <- substring(balt_geo$GEOID, 6, 12)
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
df = read.csv(paste(dir, "Victim3mo.csv", sep = ""), stringsAsFactors = F)
data_dir <- c('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Data/')
df = read.csv(paste(dir, "Victim3mo.csv", sep = ""), stringsAsFactors = F)
df$Date <- ymd(df$Date)
df$Time <- hms(df$Time)
saveRDS(df, "./sample_data.rds")
data_dir <- c('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Data/')
df = read.csv(paste(data_dir, "Victim3mo.csv", sep = ""), stringsAsFactors = F)
df$Date <- ymd(df$Date)
df$Time <- hms(df$Time)
saveRDS(df, "./sample_data.rds")
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
a <- subset(df, df$Date >= ymd('2017/9/7') &
df$Date <= ymd('2017/9/10'))
a$Tract <-formatC(a$MergeID, width=7, flag="0")
a$Tract <- substring(a$Tract,1,6)
b <- as.data.frame(matrix(0, nrow = length(unique(a$Tract)), ncol = 2))
names(b) <- c('Tract' , input$variable)
b$Tract <- unique(a$Tract)
for (i in 1:nrow(b)){
b[i,'PROPERTY'] <- sum(a[,'PROPERTY'][which(a[,'Tract'] == b[i,'Tract'])])
}
b$Rate <- 0
balt_data <- full_join(balt_geo, b)
balt_data[,'Rate'][[1]] <- balt_data[,'PROPERTY'][[1]] / (balt_data$estimate[[1]] *1000)
View(balt_data)
balt_wgs <- balt_data %>% st_set_crs(4326)
balt_wgs[,input$variable][[1]] <- balt_wgs[,input$variable][[1]] %>% replace_na(0)
balt_wgs[,'PROPERTY'][[1]] <- balt_wgs[,'PROPERTY'][[1]] %>% replace_na(0)
View(b)
View(balt_data)
balt_wgs[,'Rate'][[1]]
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
balt_data[,'Rate'][[1]] <- balt_data[,'PROPERTY'][[1]] / (balt_data[,'estimate'][[1]] *1000)
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
View(balt_wgs)
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
b$Tract <- unique(a$Tract)
for (i in 1:nrow(b)){
b[i,'SHOOTING.OR.MURDER'] <- sum(a[,'SHOOTING.OR.MURDER'][which(a[,'Tract'] == b[i,'Tract'])])
}
b$Rate <- 0
balt_data <- full_join(balt_geo, b)
balt_data[,'Rate'][[1]] <- balt_data[,'SHOOTING.OR.MURDER'][[1]] / (balt_data[,'estimate'][[1]] *1000)
balt_wgs <- balt_data %>% st_set_crs(4326)
balt_wgs[,'SHOOTING.OR.MURDER'][[1]] <- balt_wgs[,'SHOOTING.OR.MURDER'][[1]] %>% replace_na(0)
balt_wgs[,'Rate'][[1]] <- balt_wgs[,'Rate'][[1]] %>% replace_na(0)
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
greater0 <- length(balt_wgs[,'PROPERTY'][[1]][which(balt_wgs[,'PROPERTY'][[1]] > 0)])
greater0 <- length(unique(balt_wgs[,'PROPERTY'][[1]][which(balt_wgs[,'PROPERTY'][[1]] > 0)]))
greater0 <- length(unique(balt_wgs[,'SHOOTING.OR.MURDER'][[1]][which(balt_wgs[,'SHOOTING.OR.MURDER'][[1]] > 0)]))
greater0/length(balt_wgs[,'SHOOTING.OR.MURDER'][[1]])
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
?colorQuantile
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
##########Read in data
#set working directory
working_dir <- c('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
#set your data directory
data_dir <- c('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Data/')
df = read.csv(paste(data_dir, "Victim3mo.csv", sep = ""), stringsAsFactors = F)
df$Date <- ymd(df$Date)
df$Time <- hms(df$Time)
saveRDS(df, paste(working_dir, "./victim_data.rds", sep =""))
balt_geo <- get_acs(geography = "tract",
variables = "B01001_001",
state = "MD",
county = 'Baltimore City',
geometry = TRUE)
balt_geo$Tract <- substring(balt_geo$GEOID, 6, 12)
##########Read in data
#set working directory
working_dir <- c('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
#set your data directory
data_dir <- c('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Data/')
df = read.csv(paste(data_dir, "Victim3mo.csv", sep = ""), stringsAsFactors = F)
df$Date <- ymd(df$Date)
df$Time <- hms(df$Time)
saveRDS(df, paste(working_dir, "./victim_data.rds", sep =""))
balt_geo <- get_acs(geography = "tract",
variables = "B01001_001",
state = "MD",
county = 'Baltimore City',
geometry = TRUE)
balt_geo$Tract <- substring(balt_geo$GEOID, 6, 12)
setwd("~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps")
setwd("~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim")
working_dir <- c("~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim")
saveRDS(df, paste(working_dir, "./victim_data.rds", sep =""))
saveRDS(df, "./victim_data.rds")
#set working directory
working_dir <- c("~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps")
setwd(working_dir)
#set your data directory
data_dir <- c('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Data/')
#read in data
df = read.csv(paste(data_dir, "311_3mo.csv", sep = ""), stringsAsFactors = F)
df$Date <- ymd(df$Date)
df$Time <- hms(df$Time)
saveRDS(df, "./311_data.rds")
#read in data
df = read.csv(paste(data_dir, "911_3mo.csv", sep = ""), stringsAsFactors = F)
df$Date <- ymd(df$Date)
df$Time <- hms(df$Time)
saveRDS(df, "./911_data.rds")
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/Victim')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/311')
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/311')
View(df)
runApp('~/Dropbox/SCHOOL/Fall 2018/Crime Time & Space Proj/Map Apps/911')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='chelseapd', token='3D8B3DA028F0F45BD7789ABE554DCF36', secret='ixrQ1xWQqCSkagUWw3Br5WuIr7fcZpRegwDXCjif')
setwd("~/Dropbox/school/Fall 2018/Crime Time & Space Proj/Map Apps/311")
rsconnect::deployApp('~/Dropbox/school/Fall 2018/Crime Time & Space Proj/Map Apps/311')
?census_api_key
census_api_key(key = 'db92694678e382aa69cfc6873d146a86ad7903fe')
census_api_key(key = 'db92694678e382aa69cfc6873d146a86ad7903fe', overwrite = T)
?saveRDS
setwd("~/Dropbox/school/Fall 2018/Crime Time & Space Proj/Map Apps/Victim")
saveRDS(balt_geo, 'BaltGeo.rds')
